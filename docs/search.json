[
  {
    "objectID": "R Basic.html",
    "href": "R Basic.html",
    "title": "5  R 기본 소개",
    "section": "",
    "text": "5.1 R 소개\n데이터 분석 및 통계 연구에 사용되는 강력한 프로그래밍 언어 및 소프트웨어 환경입니다. 데이터 처리, 분석, 시각화, 보고서 작성 등 다양한 작업을 수행할 수 있으며, 활발한 커뮤니티와 다양한 패키지를 통해 사용자의 요구에 맞는 기능을 확장할 수 있습니다.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R 기본 소개</span>"
    ]
  },
  {
    "objectID": "R Basic.html#r사용-방법",
    "href": "R Basic.html#r사용-방법",
    "title": "5  R 기본 소개",
    "section": "5.2 R사용 방법",
    "text": "5.2 R사용 방법\n\nR server 사용 RStudio Cloud 무료 버전의 용량 제한으로 인하여, 원활한 실습을 위해 R server 제공\nhttps://sehnr.org/rtutor\n안내된 계정 사용\n.Rproj : R프로젝트 파일로, 일관된 작업을 보장하고, 사용자별 설정을 저장할 수 있습니다. 현재는 우선 생성되어 있는 상태입니다.\n새로운 R script 생성\n\n\n\n\nrstudio1\n\n\n\nR기본 설정 기본 구성 설정하기 &gt; Tools -&gt; Global Options \n\n결과 도출을 잘하려면, 다음과 같은 설정을 선택해주어야 합니다. Code -&gt; Display -&gt; ☑ \n\nR 사용 전 설정 및 R 프로그램 이해 다음과 같은 이름의 폴더를 생성합니다. 폴더는 ’New Folder’에서, R script는 ’New Blank File’을 클릭하여 새로 생성합니다.\n\n\n\n\nrstudio4\n\n\n\n폴더 별 사용 용도 data: 모든 원 또는 가공된 데이터 파일을 여기에 보관해야 합니다. rscript: 모든 r 스크립트가 저장되어 있어야 합니다.\n\ndatastep.R: 데이터 정리, 변환 및 전처리를 합니다.\nanalysis.R: 핵심 분석 방법(통계 테스트, 데이터 모델링 등)을 포함합니다.\nsources: 추가 스크립트 하위 폴더입니다.\n\nfunction.R: 서로 다른 스크립트에서 사용할 사용자 정의 함수를 정의해놓을 수 있습니다. results: plot, 테이블, 및 처리된 파일과 같은 모든 결과물을 여기에 저장합니다. manuscript: 프로젝트에 대해 작성 중인 보고서나 논문 초안, 메모 및 최종 버전을 저장합니다.\n\n\nData 준비\n\n\n\n\nrstudio5\n\n\n저장하는 위치(Cloud &gt; project &gt; data)를 제대로 파악하고 업로드해야 파일 찾을 때 편리합니다. 현재 파일 링크를 통해서 데이터를 불러올 것이기에 따로 업로드하지 않아도 됩니다.\n\n시각화를 위한 R 패키지 다운로드 및 불러오기 R에서 코드를 실행할 때는 반드시 ctrl + enter를 눌러야 합니다.\n\n\nif(!require(\"tidyverse\")) install.packages(\"tidyverse\")\n\n\nrequire: 이 함수는 ‘tidyverse’ 패키지가 이미 설치되어 있고 R 세션에서 사용할 수 있는지 확인합니다.\n!: 이 기호는 논리적 NOT을 나타냅니다. 이 함수는 require()의 결과를 반전시킵니다. 따라서 ’tidyverse’가 설치되지 않은 경우(즉, require()가 FALSE를 반환하는 경우) !.require()는 TRUE가 됩니다.\nif(): 조건문으로, if 블록 안의 코드는 조건이 TRUE인 경우에만 실행됩니다. 이 경우 ’tidyverse’가 설치되지 않았다면 조건은 TRUE가 됩니다.\ninstall.packages(“tidyverse”): 이 명령어는 ‘tidyverse’ 패키지를 설치합니다. ‘tidyverse’ 패키지가 아직 설치되지 않은 경우에만 실행됩니다.\nR 패키지 설치\n\n\n#basic requirement\nif(!require(\"tidyverse\")) install.packages(\"tidyverse\")\nif(!require(\"htmlTable\")) install.packages(\"htmlTable\")\nif(!require(\"broom\")) install.packages(\"broom\")\nif(!require(\"labelled\")) install.packages(\"labelled\")\n#packages from github\nif(!require(\"devtools\")) install.packages(\"devtools\")\nif(!require(\"ggplot2\")) install.packages(\"ggplot2\")\nlibrary(devtools)\nif(!require(\"tabf\")) install.packages(\"jinhaslab/tabf\", force = TRUE)\nlibrary(tabf)\nif(!require(\"readxl\")) install.packages(\"readxl\")\nlibrary(\"readxl\")\n\n\ntidyverse: 데이터 시각화를 위한 ggplot2가 유명하며, 데이터 조작에 도움이 되는 dplyr과 tidyr도 있습니다.\nhtmlTable: HTML 형식의 고급 테이블을 만들 수 있습니다. 웹 플랫폼에서 데이터를 표형식으로 표시해야 할 때 특히 유용합니다.\nbroom: lm과 같은 R의 내장 함수의 지저분한 출력을 깔끔한 데이터 프레임으로 변환합니다. 통계 테스트나 모델의 결과를 시각화하고 싶을 때 유용합니다.\nggplot2: 데이터 시각화를 위한 가장 유명한 R 패키지 중 하나입니다. 그래픽 문법을 기반으로 하며 복잡하고 사용자 지정 가능한 플롯을 만들기 위한 강력한 플랫폼을 제공합니다.\ntabf: GitHub에서 제공되는 패키지로, 테이블 서식 지정과 관련된 기능을 제공합니다.\nreadxl: R에 엑셀파일을 불러올 때 사용하는 패키지입니다.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R 기본 소개</span>"
    ]
  },
  {
    "objectID": "R Basic.html#건강검진-데이터셋의-소개-및-구조에-대해-이해합니다.",
    "href": "R Basic.html#건강검진-데이터셋의-소개-및-구조에-대해-이해합니다.",
    "title": "5  R 기본 소개",
    "section": "6.1 건강검진 데이터셋의 소개 및 구조에 대해 이해합니다.",
    "text": "6.1 건강검진 데이터셋의 소개 및 구조에 대해 이해합니다.\n\n범주형 변수 : 카테고리나 그룹으로 분류할 수 있는 변수입니다. 이 변수들은 수적인 의미를 가지지 않으며 단순히 분류하기 위한 목적으로 사용됩니다.\n연속형 변수 : 연속적인 숫자로 표현되며, 사이에 무한히 많은 값이 존재할 수 있는 변수입니다. 이 변수들은 산수를 통해 양과 크기를 측정할 수 있습니다.\n\n\n\n\n변수명 (code)\n변수내용(source)\n변수 값\n\n\nidv_id\n가입자 일련번호\n숫자\n\n\nAGE\n연령\n세, 숫자\n\n\nsido\n시도단위\n시도, 숫자\n\n\nsex\n성별\n문자\n\n\nheight\n신장 5cm 단위\ncm, 숫자\n\n\nweight\n체중 5kg 단위\nkg, 숫자\n\n\nwaist\n허리둘레\ncm, 숫자 \n\n\nbp_high\n수축기 혈압\nmmHg, 숫자\n\n\nbp_lwst\n이완기 혈압\nmmHg, 숫자\n\n\ntot_chole\n총콜레스테롤\nmg/dL, 숫자\n\n\ntriglyceride\n트리글리세라이드\nmg/dL, 숫자\n\n\nhdl_chole\n콜레스테롤(HDL)\nmg/dL, 숫자\n\n\nldl_chole\n콜레스테롤(LDL)\nmg/dL, 숫자\n\n\nsgot_ast\n간기능검사(AST)\nU/L, 숫자\n\n\nsgpt_alt\n간기능검사(ALT)\nU/L, 숫자\n\n\ngamma_gtp\n감마지티피\nIU/L, 숫자\n\n\nsmk_stat_type_cd\n흡연상태\n문자\n\n\ndrk_yn\n음주여부\n문자\n\n\nhchk_oe_inspec_yn\n구강검진수검여부\n문자\n\n\ncrs_yn\n치아우식증유무\n문자\n\n\ntth_mms_yn\n결손치유무\n문자\n\n\nodt_trb_yn\n치아마모증유무\n문자\n\n\nhtn\n고혈압여부\n문자\n\n\ndep\n부서\n문자\n\n\njob\n직종\n숫자\n\n\nBMI\n비만도\n숫자",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R 기본 소개</span>"
    ]
  },
  {
    "objectID": "R Basic.html#r을-사용하여-데이터를-불러오고-기본적인-탐색을-진행합니다.",
    "href": "R Basic.html#r을-사용하여-데이터를-불러오고-기본적인-탐색을-진행합니다.",
    "title": "5  R 기본 소개",
    "section": "6.2 R을 사용하여 데이터를 불러오고 기본적인 탐색을 진행합니다.",
    "text": "6.2 R을 사용하여 데이터를 불러오고 기본적인 탐색을 진행합니다.\n\n데이터 불러오기 R에 저장해둔 데이터를 현재 분석을 진행하기 위해 데이터를 준비합니다.\n\n\ndata1 = readRDS(\"data/healthcheck.rds\")\n\n\nreadRDS(): 이 함수는 R에서 .rds 파일을 읽는 데 사용됩니다. .rds 파일은 R에서 데이터를 저장하는 특별한 파일 형식입니다.\ndata1 = : 불러온 데이터를 data1이라는 이름의 변수에 저장하는 부분입니다. 이렇게 저장하면 나중에 data1을 사용해서 데이터를 분석하거나 그래프를 그릴 수 있습니다.\n\n\n6.2.1 select\n데이터가 어떻게 구성되었는지 확인하는 과정이 제일 먼저 필요합니다. 우리는 select을 통해서 데이터 내에서 원하는 변수명만 확인해서 볼 수도 있습니다.\n처음 다섯 개의 변수를 선택해 보겠습니다. head()는 위에 6행만 보여주는 것입니다.\n\ndata1 %&gt;% select(\"idv_id\", \"AGE\", \"sex\") %&gt;% head()\n\n   idv_id AGE sex\n1 3823099  31   1\n2  761158  37   1\n3 3915038  33   1\n4 3108477  30   1\n5 4621083  36   1\n6 3108819  38   1\n\n\n\n\n6.2.2 filter\n특정한 조건을 준 데이터형태를 알고 싶다면, ’filter’를 통해 특정 기준을 충족하는 행을 선택합니다. 예를 들어 성별 또는 특정 연령대에 따라 개인을 선택할 수 있습니다. 이를 위해 여러 조건문이 사용됩니다.\n’==’는 같음을 의미합니다.\n\ndata1 %&gt;% \n  select(sex, AGE) %&gt;%\n  filter(sex == 1) %&gt;% head()\n\n  sex AGE\n1   1  31\n2   1  37\n3   1  33\n4   1  30\n5   1  36\n6   1  38\n\n\n‘&’는 ’AND’, ‘|’는 ’OR’의 의미이며, 한 번에 여러 조건을 적용할 수 있습니다.’!’는 부정을 의미합니다.\n\ndata1 %&gt;%\n  select(sex, AGE) %&gt;%\n  filter(sex != 2) %&gt;%\n  filter(AGE &gt;19 & AGE &lt;60) %&gt;% head()\n\n  sex AGE\n1   1  31\n2   1  37\n3   1  33\n4   1  30\n5   1  36\n6   1  38\n\n\n’%in%’은 여러 조건을 나열하여 선택할 수 있어 명목 변수에 편리합니다.\n\ndata1 %&gt;% select(sex, AGE) %&gt;%\n  filter(sex %in% c(1,2)) %&gt;%\n  filter(!AGE &lt; 15) %&gt;% head()\n\n  sex AGE\n1   1  31\n2   1  37\n3   1  33\n4   1  30\n5   1  36\n6   1  38\n\n\n’is.na’는 데이터 내 변수들 중 NA누락값을 식별 가능합니다. Filter를 통해 변수 ’waist’의 ’NA누락값을 제외해보겠습니다. 그리고 새로운 데이터셋을 생성해보겠습니다.\n우선 NA 누락값이 있는지 확인해야 합니다. tail()은 아래의 6행들을 보여줍니다.\n\ndata1 %&gt;% count(waist) %&gt;% tail()\n\n   waist n\n80   129 7\n81   130 3\n82   133 1\n83   134 1\n84   143 1\n85    NA 5\n\n\ncount()는 변수값의 n수를 보여주고, tail()은 가장 밑에 행부터 6개를 보여줍니다.\n\ndata2 = data1 %&gt;% filter(!is.na(waist))\ndata2 %&gt;% count(waist) %&gt;% tail()\n\n   waist n\n79   128 7\n80   129 7\n81   130 3\n82   133 1\n83   134 1\n84   143 1\n\n\n다시 누락값을 확인했을 때, NA값이 없어진 것을 확인할 수 있습니다.\n\n\n6.2.3 mutate\n’mutate’는 변수를 생성하는 데 자주 사용되는 기본 함수입니다. 이 함수에 익숙해지는 것이 중요합니다. mutate는 ifelse, case_when와 같은 다양한 조건문과 함께 자주 사용됩니다.\nsex의 값인 ‘1,2’를 ’남’,‘여’으로 바꾸고, htn의 값인 ’0,1’을 ’정상’,’고혈압’으로 바꾸어서 data2에 새 변수들을 추가해보겠습니다.\n\ndata3 = data2 %&gt;%\n  mutate(sexgp = case_when(\n    sex == 1 ~ '남',\n    sex == 2 ~ '여'  )) %&gt;%\n  mutate(htngp = case_when(\n    htn == 0 ~ '정상',\n    htn == 1 ~ '고혈압'  )) \ndata3 %&gt;% select(sexgp, htngp) %&gt;% head()\n\n  sexgp htngp\n1    남  정상\n2    남  정상\n3    남  정상\n4    남  정상\n5    남  정상\n6    남  정상\n\n\n“case_when”을 통해 나이를 10살 단위로 구분하여 agegp라는 새로운 변수를 생성하겠습니다.\n\ndata4 = data3 %&gt;%\n  mutate(agegp = case_when(\n    AGE &lt; 20 ~ \"10\",\n    AGE &lt; 30 ~ \"20\",\n    AGE &lt; 40 ~ \"30\",\n    AGE &lt; 50 ~ \"40\",\n    AGE &lt; 60 ~ \"50\",\n    TRUE ~ \"60\"\n  ))\ndata4 %&gt;% select(sexgp, htngp, agegp) %&gt;% head()\n\n  sexgp htngp agegp\n1    남  정상    30\n2    남  정상    30\n3    남  정상    30\n4    남  정상    30\n5    남  정상    30\n6    남  정상    30\n\n\nagegp 변수 생성시 case_when에서 “TRUE”는 앞서 설정한 조건 외에 해당하는 값인 60세 이상의 값들에 대해, ’60’로 생성하겠다는 의미입니다.\n조건을 두개 이상 설정하여 BMI의 정상범위도 한번 설정해보겠습니다.\n\ndata5 = data4 %&gt;%\n  mutate(bmigp = case_when(\n    BMI &gt;= 18.5 & BMI &lt;= 24.9 ~ \"1.정상\",\n    BMI &lt; 18.5 ~ \"2.저체중\",\n    TRUE ~ \"3.과체중\"\n  ))\ndata5 %&gt;% select(sexgp, htngp, agegp, bmigp) %&gt;% head()\n\n  sexgp htngp agegp    bmigp\n1    남  정상    30   1.정상\n2    남  정상    30 3.과체중\n3    남  정상    30   1.정상\n4    남  정상    30   1.정상\n5    남  정상    30   1.정상\n6    남  정상    30 3.과체중\n\n\n\n\n6.2.4 pivot longer\n데이터를 분석하거나 시각화할 때, 데이터를 긴 형식(long format)으로 변환하는 경우가 많습니다. 긴 형식은 여러 변수의 값을 하나의 열로 모으고, 해당 변수의 이름을 다른 열에 저장하는 방식입니다. 이를 통해 데이터가 더 유연하게 사용될 수 있으며, 특히 ggplot2를 이용한 시각화나 그룹별 분석에서 유용합니다.\n\nselect을 이용해서 필요한 변수들만 선택한 후, pivot longer로 데이터를 변환해보도록 하겠습니다.\n\n\ndata5 %&gt;%\n  select(idv_id, AGE, sexgp, agegp, bp_high, bp_lwst) %&gt;%\n  pivot_longer(\n    cols = c(bp_high, bp_lwst),              # 변환할 열 지정\n    names_to = \"blood_pressure_type\",        # 변수명을 저장할 열 이름\n    values_to = \"blood_pressure_value\"       # 변수 값을 저장할 열 이름\n  ) \n\n# A tibble: 202,696 × 6\n    idv_id   AGE sexgp agegp blood_pressure_type blood_pressure_value\n     &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;                              &lt;int&gt;\n 1 3823099    31 남    30    bp_high                              123\n 2 3823099    31 남    30    bp_lwst                               75\n 3  761158    37 남    30    bp_high                              131\n 4  761158    37 남    30    bp_lwst                               77\n 5 3915038    33 남    30    bp_high                              118\n 6 3915038    33 남    30    bp_lwst                               78\n 7 3108477    30 남    30    bp_high                              119\n 8 3108477    30 남    30    bp_lwst                               73\n 9 4621083    36 남    30    bp_high                              129\n10 4621083    36 남    30    bp_lwst                               75\n# ℹ 202,686 more rows",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R 기본 소개</span>"
    ]
  },
  {
    "objectID": "R Basic.html#기초-통계-분석을-통해-데이터의-주요-특징을-파악합니다.",
    "href": "R Basic.html#기초-통계-분석을-통해-데이터의-주요-특징을-파악합니다.",
    "title": "5  R 기본 소개",
    "section": "7.1 기초 통계 분석을 통해 데이터의 주요 특징을 파악합니다.",
    "text": "7.1 기초 통계 분석을 통해 데이터의 주요 특징을 파악합니다.\n\n7.1.1 count\n변수에서 변수값 수가 얼마나 있는지 파악해볼 필요가 있습니다. 먼저 고혈압의 n수와 성별의 n수를 파악해보겠습니다.\n성별 n수 구하기\n\ndata5 %&gt;% count(sex)\n\n  sex     n\n1   1 49443\n2   2 51905\n\n\n\n\n7.1.2 summarise\n‘summarise’은 열별로 정보를 결합하여 표시하는 함수입니다. ’summarise’과 함께 자주 사용되는 함수는 ’mean,’ ‘sd’ (standard deviation), ‘median,’ ‘max,’ ‘min,’ 등이 있으며 ’quantile’도 자주 활용됩니다.\n\ndata5 %&gt;%\n  summarise(mean_age = mean(AGE), \n            std_age  = sd(AGE))\n\n  mean_age  std_age\n1 44.56677 14.89363\n\n\n\n\n7.1.3 group_by\n데이터 탐색에서 group_by는 지정한 변수별 특정 결과값 도출시 자주 사용됩니다.\n특히 연속형 변수의 경우 summarise, 명목형 변수의 경우 count와 함께 사용되어 변수별 n수 산출에 유용합니다. 고혈압 유무를 나타내는 변수 htn을 사용해 보겠습니다.\n이때, 단순히 n수를 구하면, 고혈압이 많은지 판단하기 어렵습니다. 그래서 mutate를 이용해서 비율을 계산하여 남녀에서 고혈압의 비율이 어느정도인지 파악해보고자 합니다.\n\ndata5 %&gt;%\n  group_by(sexgp) %&gt;%\n  count(htngp) %&gt;%\n  mutate(prob = n/sum(n)) %&gt;%\n  filter(htngp == '고혈압')\n\n# A tibble: 2 × 4\n# Groups:   sexgp [2]\n  sexgp htngp      n  prob\n  &lt;chr&gt; &lt;chr&gt;  &lt;int&gt; &lt;dbl&gt;\n1 남    고혈압 15483 0.313\n2 여    고혈압 11175 0.215\n\n\n\n\n7.1.4 chi square검정\n이번에는 chi square검정을 r을 이용하여 수행해보도록 하겠습니다. [카이제곱 검정은 두 범주형 변수(예: 성별, 고혈압 여부)가 서로 관련이 있는지 알아보는 통계 방법이에요. 예를 들어, “남성과 여성의 고혈압 비율이 다를까?” 같은 질문에 답할 때 사용할 수 있습니다.]\n두 범주형 변수 간의 독립성을 평가할 때 주로 사용됩니다. 이를 통해 연관성 여부를 간단하게 우선 확인해볼 수 있습니다.\n\n# 2*2 교차표 생성\nchi_table &lt;- table(data5$sexgp, data5$htngp)\nprint(chi_table)\n\n    \n     고혈압  정상\n  남  15483 33960\n  여  11175 40730\n\n# 카이제곱검정\nchi_sq_test_result &lt;- chisq.test(chi_table)\nprint(chi_sq_test_result)\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  chi_table\nX-squared = 1250.3, df = 1, p-value &lt; 2.2e-16\n\n\n해당 결과를 통해서 피어슨 카이제곱 검정 결과, 성별(sexgp)과 고혈압 유무(htngp)는 통계적으로 매우 유의미한 연관성을 보이는 것으로 나타났습니다 (X2 =1250.3, df=1, p&lt;0.001). 이는 남성과 여성 간 고혈압 유병률에 통계적으로 유의미한 차이가 존재한다는 것을 의미하며, 이러한 차이가 우연히 발생했을 가능성은 극히 낮다고 해석할 수 있습니다.\n\n\n7.1.5 t test\n이번에는 t test를 r을 이용하여 수행해보도록 하겠습니다. [t-검정(t-test)은 두 그룹의 평균이 서로 다른지 알아보는 통계 방법입니다. 예를 들어, “남학생과 여학생의 키 평균이 다를까?” 같은 질문에 답할 때 사용할 수 있습니다.]\n\nfiltered_data = data5 %&gt;%\n  filter(!is.na(htn)) %&gt;% \n  select(sex, AGE, htn) %&gt;%\n  mutate(sexgp = case_when(\n    sex == 1 ~ \"남성\", \n    TRUE ~ \"여성\" \n  ))\nt_test_result &lt;- t.test(AGE ~ sexgp, data = filtered_data)\nt_test_result\n\n\n    Welch Two Sample t-test\n\ndata:  AGE by sexgp\nt = -9.8336, df = 100992, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means between group 남성 and group 여성 is not equal to 0\n95 percent confidence interval:\n -1.1035835 -0.7367736\nsample estimates:\nmean in group 남성 mean in group 여성 \n          44.09550           45.01568",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R 기본 소개</span>"
    ]
  },
  {
    "objectID": "R Basic.html#변수-간의-관계와-패턴을-탐색합니다.",
    "href": "R Basic.html#변수-간의-관계와-패턴을-탐색합니다.",
    "title": "5  R 기본 소개",
    "section": "7.2 변수 간의 관계와 패턴을 탐색합니다.",
    "text": "7.2 변수 간의 관계와 패턴을 탐색합니다.\n데이터의 기본 구조를 파악하고자 표로 나타내려고 합니다. 표를 간단하게 만들 수 있는 tabf를 이용할 수 있습니다. ### TABLE 1\n\ntest1 = data5 %&gt;% \n  select(htngp, sexgp, job, AGE, dep, bmigp)\n\ntabf(test1, \n     stratas = \"htngp\", \n     catVars = c(\"sexgp\",\"job\", \"bmigp\",\"dep\"), \n     conVars = c(\"AGE\")\n) %&gt;%\n  addHtmlTableStyle(align =\"ll\") %&gt;%\n  htmlTable()\n\n\n\n\n\nvariables\nvalues\n고혈압\n정상\np.value\n\n\n\n\n1\nAGE\n\n46.9±14.6\n43.7±14.9\n&lt;0.001\n\n\n2\nsexgp\n남\n15483 (31.3%)\n33960 (68.7%)\n&lt;0.001\n\n\n3\n\n여\n11175 (21.5%)\n40730 (78.5%)\n\n\n\n4\njob\n사무직\n1459 (24.1%)\n4592 (75.9%)\n&lt;0.001\n\n\n5\n\n서비스,판매직\n4716 (26.5%)\n13103 (73.5%)\n\n\n\n6\n\n농어업\n4766 (23.7%)\n15321 (76.3%)\n\n\n\n7\n\n기술직\n15717 (27.4%)\n41674 (72.6%)\n\n\n\n8\nbmigp\n정상\n11049 (20.0%)\n44187 (80.0%)\n&lt;0.001\n\n\n9\n\n저체중\n443 (11.9%)\n3283 (88.1%)\n\n\n\n10\n\n과체중\n15166 (35.8%)\n27220 (64.2%)\n\n\n\n11\ndep\n인사과\n2676 (19.9%)\n10758 (80.1%)\n&lt;0.001\n\n\n12\n\n연구개발과\n3663 (22.0%)\n12977 (78.0%)\n\n\n\n13\n\n경영과\n3769 (24.2%)\n11836 (75.8%)\n\n\n\n14\n\n영업과\n3932 (26.1%)\n11135 (73.9%)\n\n\n\n15\n\n무역과\n4066 (27.8%)\n10566 (72.2%)\n\n\n\n16\n\n시설관리과\n4228 (31.6%)\n9154 (68.4%)\n\n\n\n17\n\n보관운송과\n4324 (34.4%)\n8264 (65.6%)\n\n\n\n\n\n\n\n7.2.1 TABLE 2\n직종(job)별 고혈압과의 연관성이 있는지 또는 얼마나 있는지를 알아보는 표를 만들고자합니다. 이는, 로지스틱 회귀분석을 통해 알아낼 수 있습니다.\n\nmod0 = data5 %&gt;%\n  glm(data=., family=binomial(), \n      formula = htn == 1 ~ \n        job \n  )\nmod1 = data5 %&gt;%\n  glm(data=., family=binomial(),\n      formula = htn == 1 ~ \n        job + agegp +sexgp + bmigp + dep \n  )\nsummary(mod0)\n\n\nCall:\nglm(formula = htn == 1 ~ job, family = binomial(), data = .)\n\nCoefficients:\n                   Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)        -1.14656    0.03005 -38.152  &lt; 2e-16 ***\njob2.서비스,판매직  0.12468    0.03452   3.612 0.000304 ***\njob3.농어업        -0.02115    0.03433  -0.616 0.537741    \njob4.기술직         0.17143    0.03148   5.446 5.14e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 116795  on 101347  degrees of freedom\nResidual deviance: 116675  on 101344  degrees of freedom\nAIC: 116683\n\nNumber of Fisher Scoring iterations: 4\n\nsummary(mod1)\n\n\nCall:\nglm(formula = htn == 1 ~ job + agegp + sexgp + bmigp + dep, family = binomial(), \n    data = .)\n\nCoefficients:\n                   Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)        -2.02189    0.04250 -47.572  &lt; 2e-16 ***\njob2.서비스,판매직  0.13358    0.03559   3.753 0.000175 ***\njob3.농어업        -0.04185    0.03537  -1.183 0.236737    \njob4.기술직         0.14327    0.03244   4.416 1.01e-05 ***\nagegp30             0.24489    0.02495   9.814  &lt; 2e-16 ***\nagegp40             0.29025    0.02460  11.798  &lt; 2e-16 ***\nagegp50             0.50865    0.02484  20.480  &lt; 2e-16 ***\nagegp60             0.66818    0.02096  31.884  &lt; 2e-16 ***\nsexgp여            -0.39114    0.01502 -26.045  &lt; 2e-16 ***\nbmigp2.저체중      -0.49899    0.05234  -9.534  &lt; 2e-16 ***\nbmigp3.과체중       0.75887    0.01504  50.466  &lt; 2e-16 ***\ndep2.연구개발과     0.14726    0.02949   4.994 5.92e-07 ***\ndep3.경영과         0.27435    0.02954   9.288  &lt; 2e-16 ***\ndep4.영업과         0.37493    0.02942  12.743  &lt; 2e-16 ***\ndep5.무역과         0.44156    0.02931  15.067  &lt; 2e-16 ***\ndep6.시설관리과     0.62972    0.02947  21.369  &lt; 2e-16 ***\ndep7.보관운송과     0.74537    0.02957  25.204  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 116795  on 101347  degrees of freedom\nResidual deviance: 110404  on 101331  degrees of freedom\nAIC: 110438\n\nNumber of Fisher Scoring iterations: 4\n\noddsTabf(mod0, mod1)\n\n\n\n\nTable. OR(95%CI) for htn of 1\n\n\nVariables\nValues\nModel.I\nModel.II\n\n\n\n\njob\n1.사무직\n1.00 (reference)\n1.00 (reference)\n\n\n\n2.서비스,판매직\n1.13 (1.06-1.21)\n1.14 (1.07-1.23)\n\n\n\n3.농어업\n0.98 (0.92-1.05)\n0.96 (0.89-1.03)\n\n\n\n4.기술직\n1.19 (1.12-1.26)\n1.15 (1.08-1.23)\n\n\nagegp\n20\n\n1.00 (reference)\n\n\n\n30\n\n1.28 (1.22-1.34)\n\n\n\n40\n\n1.34 (1.27-1.40)\n\n\n\n50\n\n1.66 (1.58-1.75)\n\n\n\n60\n\n1.95 (1.87-2.03)\n\n\nsexgp\n남\n\n1.00 (reference)\n\n\n\n여\n\n0.68 (0.66-0.70)\n\n\nbmigp\n1.정상\n\n1.00 (reference)\n\n\n\n2.저체중\n\n0.61 (0.55-0.67)\n\n\n\n3.과체중\n\n2.14 (2.07-2.20)\n\n\ndep\n1.인사과\n\n1.00 (reference)\n\n\n\n2.연구개발과\n\n1.16 (1.09-1.23)\n\n\n\n3.경영과\n\n1.32 (1.24-1.39)\n\n\n\n4.영업과\n\n1.45 (1.37-1.54)\n\n\n\n5.무역과\n\n1.56 (1.47-1.65)\n\n\n\n6.시설관리과\n\n1.88 (1.77-1.99)\n\n\n\n7.보관운송과\n\n2.11 (1.99-2.23)\n\n\n\n\n\n\nmod0\ndat1 %&gt;% glm(…): 이 줄은 일반화된 선형 모델(glm)을 나타냅니다.\ndata=., 는 파이프의 왼쪽에서 전달된 데이터 집합을 나타냅니다. 이 경우 dat4입니다.\nfamily=binomial( ): 모델이 이진 응답 변수(예: 예/아니오, 성공/실패)에 적합한 이항 분포를 사용하도록 지정합니다.\nformula = htn == 1 ~ job: 모델의 공식을 정의합니다. 이 모델은 예측 변수 job의 함수로서 htn이 1(고혈압)과 같을 확률을 모델링합니다.\nmod1: mod0과 유사하나 이번에는 모델에서 dep 외에 다른 변수들을 추가하고자 합니다.\n모델의 목적:\n\n두 모델 모두 고혈압(htn)와 직종(job) 간의 관계를 이해하려고 합니다.\nmod0은 고혈압에 대한 부서의 개별 효과를 분석합니다.\nmod1은 다른 변수들을 조정한 후 고혈압과 부서 간의 관계를 분석합니다.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R 기본 소개</span>"
    ]
  },
  {
    "objectID": "R Basic.html#기본적인-시각화-기술-예를-들어-막대-그래프-선-그래프-등을-배웁니다.",
    "href": "R Basic.html#기본적인-시각화-기술-예를-들어-막대-그래프-선-그래프-등을-배웁니다.",
    "title": "5  R 기본 소개",
    "section": "8.1 기본적인 시각화 기술, 예를 들어 막대 그래프, 선 그래프 등을 배웁니다.",
    "text": "8.1 기본적인 시각화 기술, 예를 들어 막대 그래프, 선 그래프 등을 배웁니다.\n\n8.1.1 ggplot 종류\n\n\n8.1.2 실제 그려보기\n\n산점도 그래프 geom_point 성별에 따라 나이대별 고혈압을 얼만큼 앓고 있는지 한눈에 보기 위해 선그래프를 그려보겠습니다.\n\n\ndata5 %&gt;%\n  group_by(sexgp, AGE) %&gt;%\n  count(htn) %&gt;%\n  mutate(prob = n / sum(n)) %&gt;%\n  filter(htn == 1) %&gt;%\n  ungroup() %&gt;%\n  ggplot(aes(x = AGE, y = prob, color = AGE, group = sexgp)) +\n  geom_point(size = 1) +\n  labs(x = \"연령대\", y = \"고혈압 유병률\") + # x축과 y축 이름 추가\n  theme(legend.title = element_blank()) +\n  theme(legend.position = \"none\") +\n  facet_wrap(~sexgp)\n\n\n\n\n\n\n\n\n-   group_by(sex, AGE): 성별과 연령으로 데이터를 그룹화합니다.\n-   count(htn): 고혈압 발생 여부(htn 변수)에 따라 각 그룹의 빈도를 계산합니다.\n-    mutate(prob = n / sum(n)): 각 그룹에서 고혈압 발생 확률을 계산합니다.\n-   filter(htn == 1): 고혈압이 있는 경우만을 필터링합니다.\n-   ungroup(): 그룹화를 해제합니다.\n-   ggplot(aes(x = age_group, y = prob, color = age_group, group = sex)): ggplot 객체를 생성하고, x축에는 연령 그룹을, y축에는 고혈압 발생 확률을 매핑합니다. 선 색상은 연령 그룹으로 구분하고, group = sex로 각 성별별로 다른 그룹으로 구분합니다.\n-   geom_point(): 점을 추가하여 각 그룹의 데이터를 표시합니다.\n-   theme(legend.title = element_blank()) : 범례(legend)의 제목을 없앱니다.\n-   theme(legend.position = \"none\") : 범례의 위치를 삭제함으로써, 범례를 지웁니다. 범례를 나타낼 경우의 그래프는 아래와 같습니다.\n-   facet_wrap(\\~sex): 성별에 따라 서로 다른 그래프 패널로 분할하여 시각화합니다.\n\n선 그래프 geom_line 성별에 따라 나이대별 고혈압을 얼만큼 앓고 있는지 한눈에 보기 위해 선그래프를 그려보겠습니다.\n\n\ndata5 %&gt;%\n  group_by(sexgp, agegp) %&gt;%\n  count(htn) %&gt;%\n  mutate(prob = n / sum(n)) %&gt;%\n  filter(htn == 1) %&gt;%\n  ungroup() %&gt;%\n  ggplot(aes(x = agegp, y = prob, group = sexgp)) + # Use interaction(dep, sex) for distinct lines\n  geom_point() +\n  geom_line() +\n  labs(x = \"연령대\", y = \"고혈압 유병률\") +\n  facet_wrap(~sexgp)\n\n\n\n\n\n\n\n\n-   geom_line(): 선을 추가하여 데이터 간의 경향성을 시각화합니다.\n\n막대그래프 동일한 현상을 막대그래프로 그려보겠습니다.\n\n\ndata5 %&gt;%\n  group_by(sexgp, agegp) %&gt;%\n  count(htn) %&gt;%\n  mutate(prob = n / sum(n)*100) %&gt;%\n  filter(htn == 1) %&gt;%\n  ungroup() %&gt;%\n  ggplot(aes(x = agegp, y = prob, fill = sexgp)) + \n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  scale_fill_manual(values = c(\"skyblue\", \"pink\")) +  # 색상 설정\n  facet_wrap(~sexgp) +\n  labs(title = \"연령대에 따른 고혈압 유병률\", x = \"연령대\", y = \"유병률(%)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n-   geom_bar(): 막대를 이용하여 성별별 연령그룹별 고혈압 발생 확률을 시각화합니다.\n\n추세선 그래프 동일한 현상을 추세선 그래프를 바탕으로 추세선 및 산점도 그래프를 그려보겠습니다.\n\n\ndata5 %&gt;%\n  group_by(sexgp,AGE) %&gt;%\n  count(htn) %&gt;%\n  mutate(prob = n / sum(n)) %&gt;%\n  filter(htn == 1) %&gt;%\n  ungroup() %&gt;%\n  ggplot(aes(x = AGE, y = prob, color = AGE, group = sexgp)) + \n  geom_point(size = 0.5) +\n  geom_smooth() +\n  labs(title = \"연령대에 따른 고혈압 유병률\", x = \"연령대\", y = \"유병률(%)\") +\n  theme(legend.title = element_blank()) +\n  theme(legend.position = \"none\") +\n  facet_wrap(~sexgp)\n\n\n\n\n\n\n\n\n-   geom_smooth(): 추세선을 활용하여 연속형 변수인 AGE의 성별별 추세를 시각화합니다.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R 기본 소개</span>"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "2025년 하계 산업보건학회",
    "section": "",
    "text": "소개\n2025년 하계 산업보건학회 PDC 강의록입니다.\nflyinyou@gmail.com",
    "crumbs": [
      "소개"
    ]
  }
]